---
import '../styles/global.css'
type Props = {
  description: string
  title?: string
}

const { description, title } = Astro.props
---

<html lang='fr'>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <meta name='generator' content={Astro.generator} />
    <meta name='description' content={description} />
    <meta name='theme-color' content='#fff' />
    <meta property='og:title' content={title} />
    <meta property='og:type' content='' />
    <meta property='og:image' content='' />
    <meta property='og:url' content={Astro.url} />
    <meta property='og:description' content={description} />
    <title>{title ? `${title} - ` : ''} Thomas Paquier</title>
  </head>

  <body>
    <!-- Theme Switcher -->
    <button id='theme-switch'>
      <svg
        xmlns='http://www.w3.org/2000/svg'
        viewBox='0 -960 960 960'
        fill='#e8eaed'
        ><path
          d='M480-280q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Z'
        ></path></svg
      >
      <svg
        xmlns='http://www.w3.org/2000/svg'
        viewBox='0 -960 960 960'
        fill='#e8eaed'
      >
        <path
          d='M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Z'
        ></path>
      </svg>
    </button>

    <!-- Slot to inject content from child pages -->
    <slot />

    <!-- Dark Mode Script -->
    <script type='text/javascript' defer>
      document.addEventListener('DOMContentLoaded', () => {
        const themeSwitch = document.getElementById('theme-switch')
        let darkmode = localStorage.getItem('darkmode')

        // Check dark mode on load
        const enableDarkMode = () => {
          document.body.classList.add('darkmode')
          localStorage.setItem('darkmode', 'active')
        }

        const disableDarkMode = () => {
          document.body.classList.remove('darkmode')
          localStorage.removeItem('darkmode')
        }

        // Apply stored preference
        if (darkmode === 'active') {
          enableDarkMode()
        }

        // Theme switch event listener
        themeSwitch.addEventListener('click', () => {
          darkmode = localStorage.getItem('darkmode')
          darkmode !== 'active' ? enableDarkMode() : disableDarkMode()
        })
      })
    </script>

    <style>
      #theme-switch {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        bottom: 30px;
        left: 30px;
        height: 60px;
        width: 60px;
        padding: 10px;
        border: 2px solid var(--v2-secondary);
        border-radius: 50%;
        background-color: var(--v2-primary);
        cursor: pointer;
        z-index: 1000;
      }

      #theme-switch svg {
        fill: var(--v2-secondary);
        transition: transform 0.3s;
      }

      #theme-switch:hover svg {
        fill: var(--v2-primary-hover);
        filter: drop-shadow(0 0 20px var(--v2-primary-hover));
      }

      #theme-switch svg:last-child {
        display: none;
      }

      .darkmode #theme-switch svg:first-child {
        display: none;
      }

      .darkmode #theme-switch svg:last-child {
        display: block;
      }
    </style>
  </body>
</html>
