---
import myFleche from '/fleche.svg'
import blueVideo from '/video/blue_anim.mp4'
import yellowVideo from '/video/yellow_anim.mp4'
import orangeVideo from '/video/orange_anim.mp4'
import purpleVideo from '/video/purple_anim.mp4'
import BaseLayout from '../layouts/base-layout.astro'
import '../styles/global.css'
---

<BaseLayout
  description='Étudiant passionné par la 3D, je suis basé à Besançon où je crée des univers uniques grâce à mes compétences en modélisation et animation.'
>
  <div class='container'>
    <div class='intro'>
      <div class='intro_icon'>
        <a href='/'>
          <h2>THOMAS</h2>
          <h2>PAQUIER</h2>
        </a>
      </div>

      <div class='intro_hero'>
        <h2 class='intro_titre'>ONE PERSON, THREE CREATIVE SPHERES</h2>
        <!-- <p class='intro_description'>
          Welcome to my creative space. Explore my varied works, each a
          testament to unique passion and vision. Open to exciting
          collaborations to push the boundaries of my craft. I hope this
          collection ignites inspiration within you, reflecting the evolution of
          my creative path.
        </p> -->

        <!-- <div class='button button-anim'>
          <a href='/projects' class='button-text'>Discover my work</a>
          <a href='/projects'>
            <svg
              width='36px'
              height='36px'
              clip-rule='evenodd'
              fill-rule='evenodd'
              stroke-linejoin='round'
              stroke-miterlimit='2'
              viewBox='0 0 24 24'
              xmlns='http://www.w3.org/2000/svg'
              ><path
                d='m14.523 18.787s4.501-4.505 6.255-6.26c.146-.146.219-.338.219-.53s-.073-.383-.219-.53c-1.753-1.754-6.255-6.258-6.255-6.258-.144-.145-.334-.217-.524-.217-.193 0-.385.074-.532.221-.293.292-.295.766-.004 1.056l4.978 4.978h-14.692c-.414 0-.75.336-.75.75s.336.75.75.75h14.692l-4.979 4.979c-.289.289-.286.762.006 1.054.148.148.341.222.533.222.19 0 .378-.072.522-.215z'
                fill-rule='nonzero'></path></svg
            >
          </a>
        </div> -->
      </div>
      <div class='intro_langue'>
        <h3 class='active'>EN</h3>
        <h3>FR</h3>
      </div>
    </div>
    <div class='grid'>
      <a href='/projects' class='col_blue'>
        <img
          src={myFleche}
          alt='une flèche qui pointe vers une autre page'
          class='col_icon'
        />
        <h2 class='col_titre'>Projects</h2>
        <video loop muted>
          <source src={blueVideo} type='video/mp4' />
        </video>
      </a>
      <a href='#' class='col_red'>
        <img
          src={myFleche}
          alt='une flèche qui pointe vers une autre page'
          class='col_icon'
        />
        <h2 class='col_titre'>DRAWING</h2>
        <video loop muted>
          <source src={yellowVideo} type='video/mp4' />
        </video>
      </a>
      <a href='#' class='col_yellow'>
        <img
          src={myFleche}
          alt='une flèche qui pointe vers une autre page'
          class='col_icon'
        />
        <h2 class='col_titre' id='comingsoon'>Coming Soon</h2>
        <video id='videoClip' loop muted>
          <source src={orangeVideo} type='video/mp4' />
        </video>
      </a>
      <a href='contact' class='col_purple'>
        <img
          src={myFleche}
          alt='une flèche qui pointe vers une autre page'
          class='col_icon'
        />
        <h2 class='col_titre'>Contact</h2>
        <video id='videoClip' loop muted>
          <source src={purpleVideo} type='video/mp4' />
        </video>
      </a>
    </div>
  </div>
</BaseLayout>

<script>
  const grid = document.querySelector('.grid') as HTMLElement
  const items = document.querySelectorAll('.grid > a')

  items.forEach((item, index) => {
    const video = item.querySelector('video')
    const myFleche = item.querySelector('img') // Sélection de myFleche

    item.addEventListener('mouseenter', () => {
      const values = Array(items.length).fill('1fr')
      if (index > 0) {
        values[index - 1] = '0.8fr'
      }
      values[index] =
        index === 0 || index === values.length - 1 ? '1.2fr' : '1.4fr'
      if (index < items.length - 1) {
        values[index + 1] = '0.8fr'
      }
      grid.style.gridTemplateColumns = values.join(' ')

      video?.play()

      myFleche.style.opacity = '1'
      myFleche.style.transform = 'translate(10%, -10%)'
    })

    item.addEventListener('mouseleave', () => {
      grid.style.gridTemplateColumns = Array(items.length).fill('1fr').join(' ')

      video?.pause()

      myFleche.style.opacity = '0'
      myFleche.style.transform = 'translate(-10%, 10%)'
    })
  })

  const h3Elements = document.querySelectorAll('h3')

  h3Elements.forEach((h3) => {
    h3.addEventListener('mouseenter', () => {
      h3.classList.add('show')
    })

    h3.addEventListener('mouseleave', () => {
      h3.classList.remove('show')
    })
  })
</script>

<style scoped>
  body {
    margin: 0px;
    padding: 0px;
    background: var(--bg-color);
  }
  a {
    text-decoration: none;
    color: var(--text-color);
  }
  a:hover {
    color: white;
  }
  h2 {
    font-family: var(--bigger-font-size);
  }

  #comingsoon {
    width: 440px;
  }

  .container {
    display: flex;
    flex-direction: row;
    height: 100vh;
  }
  .intro {
    width: 50%;
    position: relative;
  }
  .intro_icon {
    position: absolute;
    font-weight: 900;
    top: 30px;
    left: 30px;
    font-family: var(--primary-font-family);
    color: var(--text-color);
    a > h2 {
      font-size: 14px;
      text-decoration: none;
      display: flex;
      flex-direction: column;
      letter-spacing: 3px;
    }
  }
  .intro_langue {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 20px;
    position: absolute;
    font-weight: 900;
    bottom: 20px;
    left: 30px;
    font-family: var(--primary-font-family);
    font-size: 28px;
    color: var(--text-color);
  }
  .intro_langue h3 {
    position: relative;
  }
  .intro_langue h3::after {
    content: '';
    display: block;
    position: absolute;
    border-bottom-color: var(--text-color);
    bottom: -2px;
    left: 0;
    width: 100%;
    border-bottom-style: solid;
    opacity: 0;
    transition: opacity 0.2s cubic-bezier(0.19, 1, 0.22, 1);
  }
  h3.active::after {
    opacity: 1;
  }
  h3.show::after {
    opacity: 1;
  }

  .intro_hero {
    display: flex;
    flex-direction: column;
    position: absolute;
    padding-left: 100px;
    top: 25%;

    gap: 20px;
  }
  .intro_titre {
    /* font-size: var(--giant-font-size); */
    font-family: var(--primary-font-family);
    line-height: 1;
    padding-right: 00px;
    font-weight: 800;
    font-size: clamp(1rem, 20vw, 6rem);
    color: var(--text-color);
  }
  .intro_description {
    margin-top: 30px;
    font-size: 18px;
    font-family: var(--article-font-family);
    color: var(--text-color);
    line-height: 1.2;
    padding-right: 500px;
  }
  .button {
    position: relative;
    display: flex;
    flex-direction: row;
    margin-top: 40px;
    gap: 20px;
    width: fit-content;
    height: fit-content;
    padding: 0;
    cursor: pointer;
    border: 4px solid var(--text-color);
    border-radius: 100px;
    justify-content: center;
    align-items: center;
    padding: 15px 25px;
    transition: opacity 0.2s;
    .button-text {
      cursor: pointer;
      position: relative;
      font-family: var(--article-font-family);

      font-weight: 500;
      font-size: 24px;
    }
    svg {
      display: flex;
      align-self: center;
      fill: var(--text-color);
    }
    &:hover {
      color: black;
      fill: black;
      svg {
        fill: black;
      }
    }
  }

  .button::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    content: '';
    background: var(--text-color);
    transition: transform 0.3s;
  }

  .button-anim {
    overflow: hidden;
  }
  .button-anim:hover a {
    color: black;
  }
  .button-anim::before {
    right: auto;
    bottom: auto;
    width: 120%;
    height: 100%;
    transform-origin: right top;
    transform: skewX(-30deg) scale(0, 1);
  }
  .button-anim:hover::before {
    transform-origin: left top;
    transform: skewX(-30deg) scale(1, 1);
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    width: 50%;
    grid-gap: 7px;
    transition: 0.3s;
    /* transition: ease-in-out 0.3s; */
  }

  .col_icon {
    position: absolute;
    display: flex;
    justify-content: center;
    top: 60px;
    scale: 1.15;
    opacity: 0;
    transition: opacity 0.4s ease, transform 0.5s ease; /* Animation de transition */
    transform: translate(-35%, 30%); /* Décalage initial */
  }

  .col_titre {
    display: flex;
    position: absolute;
    left: 50%;
    font-size: var(--big-font-size);
    font-family: var(--primary-font-family);
    transform: rotate(-90deg);
    transform-origin: center left;
    font-weight: 700;
    text-transform: uppercase;
    color: white;
  }
  .col_blue {
    position: relative;
    background: #00f;

    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: center;
  }
  .col_blue video {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  .col_blue h2 {
    z-index: 1;
  }
  .col_blue img,
  .col_purple img,
  .col_red img,
  .col_yellow img {
    color: white;
    stroke: white;
    width: 100px;
    height: 100px;
    z-index: 1;
  }

  .col_purple::after,
  .col_blue::after,
  .col_yellow::after,
  .col_red::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(20, 31, 42, 0.5);
    z-index: 0;
  }
  .col_red {
    position: relative;
    background: #f00;

    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: center;
  }
  .col_red::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(49, 49, 49, 0.8);
    z-index: 0;
  }
  .col_red:hover::after,
  .col_blue:hover::after,
  .col_yellow:hover::after,
  .col_purple:hover::after {
    opacity: 0;
    transition: opacity 0.2s cubic-bezier(0.19, 1, 0.22, 1);
  }
  .col_red video {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  .col_red h2 {
    z-index: 1;
  }
  .col_yellow {
    position: relative;
    background: #ff0;

    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: center;
  }
  .col_yellow video {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  .col_yellow h2 {
    z-index: 1;
  }
  .col_purple {
    position: relative;
    background: purple;

    display: flex;
    flex-direction: column;
    justify-content: end;
    align-items: center;
  }
  .col_purple video {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  .col_purple h2 {
    z-index: 1;
  }

  @media only screen and (max-width: 1599px) {
    .intro_hero {
      top: 18%;
    }
    .intro_icon {
      left: 40px;
    }
  }
</style>
