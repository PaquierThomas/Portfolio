---
import '../styles/global.css'
import myPlus from '/plus_icon.png'
import myCheck from '/check_icon.png'
import { mergeProps } from 'vue'
import type { Project } from '../content/config'

type Props = Project['textblock'] & {}

const { title, summary, paragraph } = Astro.props
---

<div class='section_content'>
  <h2 class='section_title'>
    <span>{title.highlightTitle}</span>
    {title.secondPartTitle}
  </h2>
  <p class='section_summary'>
    {summary}
  </p>
  <div class='section_description'>
    {paragraph?.map((text: string) => <p>{text}</p>)}
  </div>
</div>

<style scoped>
  .section_title {
    font-size: 50px;
    font-weight: bold;
    line-height: 60px;
  }
  .section_title span {
    color: #44e9ff;
  }

  .section_content {
    display: flex;
    flex-direction: column;
    gap: 40px;
  }
  .section_summary {
    font-size: 30px;
    font-weight: 400;
    line-height: 40px;
  }
  .section_description {
    display: grid;
    /* grid-template-columns: repeat(3, 1fr); */
    grid-column-gap: 60px;
    grid-row-gap: 30px;

    font-size: 16px;
    font-weight: 400;
    line-height: 28px;
  }
</style>

<script>
  const section_description = document.querySelector(
    '.section_description',
  ) as HTMLDivElement

  const paragraphs = section_description.children

  let column = 2
  if (paragraphs.length === 1) {
    column = 1
  } else if (paragraphs.length % 2 !== 0 || paragraphs.length === 6) {
    column = 3
  }

  section_description.style.gridTemplateColumns = `repeat(${column}, 1fr)`
</script>
